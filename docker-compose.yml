version: '3.8'

services:
  # Aircloud Legal Platform - Flask Application
  aircloud-legal:
    build:
      context: ./aircloud-platform
      dockerfile: docker/Dockerfile.flask
    container_name: aircloud-legal-platform
    ports:
      - "5001:5001"
    environment:
      - FLASK_APP=aircloud_legal_platform.py
      - FLASK_ENV=production
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5001
    volumes:
      - ./aircloud-platform/instance:/app/instance
      - ./aircloud-platform/uploads:/app/uploads
      - ./aircloud-platform/static/exports:/app/static/exports
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aircloud-network
    depends_on:
      - redis

  # Redis for real-time features and caching
  redis:
    image: redis:7-alpine
    container_name: aircloud-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - aircloud-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:

networks:
  aircloud-network:
    driver: bridge