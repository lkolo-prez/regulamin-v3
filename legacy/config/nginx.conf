events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Enhanced logging format for legal platform
    log_format enhanced_legal '$remote_addr - $remote_user [$time_local] '
                              '"$request" $status $body_bytes_sent '
                              '"$http_referer" "$http_user_agent" '
                              '$request_time $upstream_response_time '
                              '$upstream_addr $request_id';

    access_log /var/log/nginx/access.log enhanced_legal;
    error_log  /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/xml
        application/rss+xml
        application/javascript
        application/json
        application/x-javascript
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'";

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=suggestions:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=voting:10m rate=20r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;

    # Upstream configuration for load balancing
    upstream sspo_legal_backend {
        least_conn;
        server sspo-legal-enhanced:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream sspo_legal_api {
        least_conn;
        server sspo-legal-enhanced:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Cache configuration
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=static_cache:10m max_size=100m inactive=60m use_temp_path=off;

    server {
        listen 80;
        listen [::]:80;
        server_name _;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect HTTP to HTTPS (uncomment for production with SSL)
        # return 301 https://$host$request_uri;
        
        # For development, serve directly
        location / {
            return 301 http://$host:3000$request_uri;
        }
    }

    # Main server block for SSPO Legal Platform
    server {
        listen 80;
        listen [::]:80;
        server_name sspo-legal.local localhost;

        # Connection limits
        limit_conn perip 20;

        # Security: Hide server version
        server_tokens off;

        # Root location - main application
        location / {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy headers
            proxy_pass http://sspo_legal_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Cache bypass for dynamic content
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
        }

        # API endpoints with enhanced rate limiting
        location /api/ {
            # Enhanced rate limiting for API
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://sspo_legal_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # API-specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            # Enable CORS for API
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
        }

        # Enhanced rate limiting for suggestions API
        location /api/suggestions {
            limit_req zone=suggestions burst=5 nodelay;
            
            proxy_pass http://sspo_legal_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Longer timeout for legal analysis
            proxy_read_timeout 60s;
        }

        # Enhanced rate limiting for voting endpoints
        location ~ ^/api/suggestions/.*/vote$ {
            limit_req zone=voting burst=10 nodelay;
            
            proxy_pass http://sspo_legal_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }

        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://sspo_legal_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            add_header Cache-Control "public, max-age=3600";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://sspo_legal_backend/api/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Monitoring endpoints (restrict access in production)
        location /metrics {
            # Allow only local access
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_pass http://sspo_legal_api;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 "Not Found - SSPO Legal Platform";
        }
        
        location = /50x.html {
            internal;
            return 500 "Internal Server Error - SSPO Legal Platform";
        }
    }

    # HTTPS server configuration (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name sspo-legal.yourdomain.com;
    #
    #     # SSL configuration
    #     ssl_certificate /etc/nginx/ssl/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #
    #     # Include the same location blocks as above
    # }

    # Additional monitoring server for Prometheus metrics
    server {
        listen 8080;
        server_name _;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }

        location /metrics {
            # Prometheus metrics endpoint
            proxy_pass http://sspo_legal_api/metrics;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
    }
}